"use strict";(self.webpackChunkkaboom_docs=self.webpackChunkkaboom_docs||[]).push([[6785],{4317:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"self-host-kaboom","metadata":{"permalink":"/kaboom-docs/blog/self-host-kaboom","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-03-11-selfhost-kaboom/index.md","source":"@site/blog/2022-03-11-selfhost-kaboom/index.md","title":"How to self host Kaboom","description":"The only way to signup and use Kaboom as of right now is to host it yourself.","date":"2022-03-11T00:00:00.000Z","formattedDate":"March 11, 2022","tags":[{"label":"selfhost","permalink":"/kaboom-docs/blog/tags/selfhost"}],"readingTime":4.475,"truncated":false,"authors":[{"name":"Tanveer Najib","title":"Maintainer of Kaboom","url":"https://github.com/crxssed7","imageURL":"https://github.com/crxssed7.png","key":"crxssed"}],"frontMatter":{"slug":"self-host-kaboom","title":"How to self host Kaboom","authors":["crxssed"],"tags":["selfhost"]}},"content":":::note\\n\\nThe only way to signup and use Kaboom as of right now is to host it yourself. \\n\\n:::\\n\\nKaboom is quite simple to self host and provides some customizability. Follow this step-by-step guide to get it set up.\\n\\n## Getting started\\n\\nBefore setting up Kaboom you need to make sure you have [Python](https://www.python.org/downloads/) installed. Head over to the Python website and follow the install instructions for your system.\\n\\nTo check if Python is already installed, run:\\n\\n```bash\\npython -v\\n```\\n\\nOR\\n\\n```bash\\npython3 -v\\n```\\n\\nKaboom needs a minimum of Python version 3.10.2\\n\\n## Cloning the repository\\n\\nIf you have Git installed on your machine you can do this:\\n\\n```bash\\ngit clone https://github.com/kaboom-db/kaboom-api\\n```\\n\\nIf you don\'t have Git, head over to https://github.com/kaboom-db/kaboom-api and click the green \'Code\' button and then \'Download ZIP\'. Unzip the folder to your desired location. Note that downloading the file instead of cloning the repo means that you won\'t be able to recieve updates with `git pull`.\\n\\nYou now need to install the Python requirements. In a terminal, navigate to the Kaboom folder and run the following command:\\n\\n```bash\\npip install -r requirements.txt\\n```\\n\\n## DB Secrets\\n\\nKaboom uses a `db_secrets.py` file to \'hide\' your sensitive credentials from the git repo. The file should be located in the inner `kaboom/` folder. There is already a file called `db_secrets.example.py` with this in it:\\n\\n```python\\n# Not needed if you don\'t use PGSQL\\nDB_NAME = \'\'\\nDB_USER = \'\'\\nDB_PASS = \'\'\\nDB_HOST = \'\'\\nDB_PORT = \'\'\\n\\n# Django Secret Key. This needs to be generated on first setup.\\nDJ_SECRET_KEY = \'<secret_key>\'\\n\\n# Needed if you want to use AWS S3 for file uploads\\nAWS_ACCESS_KEY = \'\'\\nAWS_SECRET_ACCESS_KEY = \'\'\\nAWS_BUCKET_NAME = \'\'\\nAWS_S3_SIGNATURE_VERSION = \'s3v4\'\\nAWS_S3_REGION_NAME = \'\'\\nAWS_S3_FILE_OVERWRITE = False\\nAWS_DEFAULT_ACL = None\\nAWS_S3_VERIFY = True\\nAWS_QUERYSTRING_AUTH = False\\n\\n# Needed if you want to send emails via SendGrid\\nSENDGRID_APIKEY = \'\'\\nEMAIL_HOST = \'smtp.sendgrid.net\'\\nEMAIL_HOST_USER = \'\' # In some cases, this may have to be \'apikey\'\\nEMAIL_PORT = 587\\n# If using SendGrid, this email needs to have permissions in your SendGrid account.\\nDEFAULT_FROM_EMAIL = \'\'\\n```\\n\\nWe first need to generate the Django Secret Key. In a terminal, navigate to the Kaboom folder and run the command:\\n\\n```bash\\npython gen_key.py\\n```\\n\\nThis will automatically replace `<secret_key>` with a new secret key.\\n\\nRename the `db_secrets.example.py` file to `db_secrets.py`. If you\'re less knowledgable about PGSQL, Sendgrid and S3, it\'s recommended that you leave everything as default and skip ahead to the next step.\\n\\nIf you want a more advanced instance of Kaboom, with email and global image uploads functionality, have a look at setting up Sendgrid (emails) and AWS S3 (image uploads). You then need to add your credentials to this file, so that Kaboom can connect to the services. Bare in mind that emails and image uploads still work without them, but are a bit less functional (this is explained in the next step)\\n\\nKaboom has the ability to use two different types of databases - PostgreSQL or SQLite. If you use PostgreSQL, you will have to provide your database credentials also.\\n\\n## Applying settings\\n\\nThe first thing to do before setting up the database and creating a user is tweaking your settings. In the downloaded/cloned folder, open the file `settings.py` (located in the same folder as `db_secrets.py`) in a text editor. Near the top of the file you\'ll find the following three lines:\\n\\n```python\\nPGSQL = True\\nSENDGRID = False\\nAWS_S3 = False\\n```\\n\\nThe values for these entirely depend on how you have setup your [db_secrets.py](#db-secrets) in the last step. If you left your db_secrets as default in the last step, set all three of these values to `False`, as you won\'t be needing them.\\n\\n### PGSQL\\n\\nIf PGSQL is set to `True`, Kaboom will attempt to connect to the PostgreSQL database defined in db_secrets.py using the given credentials. If it\'s set to `False` it will default to SQLite, creating the database in the root directory of Kaboom with the name `db.sqlite3`.\\n\\n### SENDGRID\\n\\nIf you\'re planning on having multiple users on your Kaboom instance, you may need to send out emails for account confirmations and password resets. Setting this value to `True` will let Kaboom send emails via the Sendgrid SMTP using your credentials, provided in db_secrets.py. If you don\'t need to send out emails, setting this to `False` will store the emails in plaintext in the `sent_emails` folder, located in the root directory of Kaboom.\\n\\n### AWS_S3\\n\\nYou might want to use AWS S3 to store your image uploads instead of storing them on your machine. Setting this to `True` will upload any images (covers, background etc) to the S3 bucket specified in db_secrets.py. This may be overkill for some users though, so setting it to `False` will be good enough for most people.\\n\\n## Setting up the database\\n\\nAfter changing your settings, you can now setup your database and your super user.\\n\\nIn a terminal, navigate to the Kaboom folder and run:\\n\\n```bash\\npython manage.py migrate\\n```\\n\\nand\\n\\n```bash\\npython manage.py collectstatic\\n```\\n\\nYou then need to create a super user (this is basically a normal user but has full control of the database):\\n\\n```bash\\npython manage.py createsuperuser\\n```\\n\\nRun through the instructions to create your user.\\n\\n## Running\\n\\nTo start Kaboom, run the command:\\n\\n```bash\\npython manage.py runserver 0.0.0.0:8000\\n```"}]}')}}]);